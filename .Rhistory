```{r}
# 변수 생성 방법
a <- 1
b = 3
c <- 1.5
```
# 변수 생성 방법
a <- 1
b = 3
c <- 1.5
```{r}
# 변수 생성 방법
a <- 1
b = 3
c <- 1.5
```
# 변수 생성 방법
a <- 1
b = 3
c <- 1.5
## <- = 의 차이
## <- = 의 차이
# Chunk 1
# 변수 생성 방법
a <- 1
b = 3
c <- 1.5
# Chunk 1
# 변수 생성 방법
a <- 1
b = 3
c <- 1.5
y
# 변수 출력
print(a)
b
c
sum(x <- c(1,2))
x
sum(y = 1)
y
sum(x <- c(1,2))
x
sum(y <- 1)
y
x
sum(y = 1)
y
sum(y = 1)
y
a + b
6 / b
2 * c
# 숫자 5개로 이루어진 변수
var1 <- c(1,3,5,7,9)
var1
# 숫자 5개로 이루어진 변수
var1 <- c(1,3,5,7,9)
var1
# 클론 : 1씩 증가하는 연속된 수(마지막 수 포함)
var2 <- c(1:5)
var2
# 숫자 5개로 이루어진 변수
var1 <- c(1,3,5,7,9)
var1
# 클론 : 1씩 증가하는 연속된 수(마지막 수 포함) -> 파이썬이랑 다름 R은 1부터 센다(다른 언어는 0)
var2 <- c(1:5)
var2
#seq() : 연속된 값을 지닌 변수 생성(sequence)
var3 <- seq(from = 1, to = 5)
var3
# 숫자 5개로 이루어진 변수
var1 <- c(1,3,5,7,9)
var1
# 클론 : 1씩 증가하는 연속된 수(마지막 수 포함) -> 파이썬이랑 다름 R은 1부터 센다(다른 언어는 0)
var2 <- c(1:5)
var2
#seq() : 연속된 값을 지닌 변수 생성(sequence)
var3 <- seq(from = 1, to = 5)
var3
# seq함수의 간격 조절
var4 <- seq(1, 10, by = 2)
var4
# 숫자 5개로 이루어진 변수
var1 <- c(1,3,5,7,9)
var1
# 클론 : 1씩 증가하는 연속된 수(마지막 수 포함) -> 파이썬이랑 다름 R은 1부터 센다(다른 언어는 0)
var2 <- c(1:5)
var2
#seq() : 연속된 값을 지닌 변수 생성(sequence)
var3 <- seq(from = 1, to = 5)
var3
# seq함수의 간격 조절
var4 <- seq(1, 10, by = 2)
var4
# 등차수열
var5 <- seq(1, 10, length = 5)
var5
# 숫자 5개로 이루어진 변수
var1 <- c(1,3,5,7,9)
var1
# 클론 : 1씩 증가하는 연속된 수(마지막 수 포함) -> 파이썬이랑 다름 R은 1부터 센다(다른 언어는 0)
var2 <- c(1:5)
var2
#seq() : 연속된 값을 지닌 변수 생성(sequence)
var3 <- seq(from = 1, to = 5)
var3
# seq함수의 간격 조절
var4 <- seq(1, 10, by = 2)
var4
# 등차수열
var5 <- seq(1, 10, length = 5)
var5
# 수열 개수 지정
var6 <- seq(1, by = 3, length.out = 4)
var6
# 변수 + 숫자 : 각 변수의 각 값에 2가 더해진 값이 출력
var1 + 2
# Chunk 1
# 변수 생성 방법
a <- 1
b = 3
c <- 1.5
# Chunk 2
# 변수 출력
print(a)
b
c
# Chunk 3
sum(x <- c(1,2))
x
sum(y = 1)
# y
# y를 변수가 아니라 파라미터로 인식
# Chunk 4
a + b
6 / b
2 * c
# Chunk 5
# 숫자 5개로 이루어진 변수
var1 <- c(1,3,5,7,9)
var1
# 클론 : 1씩 증가하는 연속된 수(마지막 수 포함) -> 파이썬이랑 다름 R은 1부터 센다(다른 언어는 0)
var2 <- c(1:5)
var2
#seq() : 연속된 값을 지닌 변수 생성(sequence)
var3 <- seq(from = 1, to = 5)
var3
# seq함수의 간격 조절
var4 <- seq(1, 10, by = 2)
var4
# 등차수열
var5 <- seq(1, 10, length = 5)
var5
# 수열 개수 지정
var6 <- seq(1, by = 3, length.out = 4)
var6
# Chunk 6
# 변수 + 숫자 : 각 변수의 각 값에 2가 더해진 값이 출력
var1 + 2
# 변수 + 숫자 : 각 변수의 각 값에 2가 더해진 값이 출력
var1 + 2
# 변수 + 변수: 같은 순서에 위치한 값끼리 연산
var1 + var2
# 변수 + 변수 연산에서 데이터의 길이가 다를 경우
var1 + var6
str1
str1
str1
str2 <- c("Hello","World","is","good!")
str2
str1 <- "Hello World!"
str1
str1 * 2
x <- c(1,2,3)
x <- c(1,2,3)
# 평균
mean(x)
# 최댓값
max(x)
# 최솟값
min(x)
mean(x)
# 최댓값
max(x)
# 최솟값
min(x)
# paste() : 여러 문자를 합치는 함수
paste("Hello", "World")
paste(str2, collapse = ",")
# ggplot2 패키지 설치
install.packages("ggplot2")
# ggplot2 패키지 로드
library(ggplot2)
data <- c("a","a","b","c")
data <- c("a","a","b","c")
qplot(data)
```
?qplot
# data에 mpg, x축에 hwy 변수 지정하여 그래프 그리기
qplot(data = mpg, x = hwy)
# x축에 cty
qplot(data = mpg, x = cty)
# x축에 drv, y축에 hwy 산점도
qplot(data = mpg, x = drv, y = hwy)
qplot(data = mpg, x = drv, y = hwy, color = manufacturer)
qplot(data = mpg, x = drv, y = hwy, colour = manufacturer)
qplot(data = mpg, x = drv, y = hwy, z = manufacturer)
qplot(data = mpg, x = drv, y = hwy, color = manufacturer)
# x축 drv, y축 hwy 선 그래프
qplot(data = mpg, x =drv, y = hwy, geomo = "line")
# x축 drv, y축 hwy 선 그래프
qplot(data = mpg, x =drv, y = hwy, geomo = "line")
# x축 drv, y축 hwy 선 그래프
qplot(data = mpg, x =drv, y = hwy, geom = "line")
qplot(data = mpg, x =drv, y = hwy, geom = "boxplot")
# x축 drv, y축 hwy 상자 수염 그림, drv별 색 표현
qplot(data = mpg, x =drv, y = hwy, geom = "boxplot", colour = drv)
v1 <- c(1,2,3)
v2 <- c("Hello", "world!")
```{r}
L1 <- list(v1, F1, M1, A1, D3)
L1
L2 <- list(x = 1:4, y = c("A", "B"))
L2
```
M1
![](./R데이터구조2.png)
# 배열 표현법
A1 <- array(data = 1:24, dim = c(4,3,2))
A1
M1
M1 <- matrix(1:9, nrow = 3)
View(M1)
View(M1)
F1
F1 <- factor(c("좋다","보통이다","싫다"),level=c("좋다","보통이다","싫다"), order=T)
F1
# 요인 표현법
F1 <- factor(c("좋다","보통이다","싫다"),level=c("좋다","보통이다","싫다"))
F1
L1
L1 <- list(v1, F1, M1, A1, D3)
L1
D1 <- c(1,2,3)
D2 <- c("A", "B", "C")
D3 <- data.frame(D1,D2)
```
# 배열 표현법
A1 <- array(data = 1:24, dim = c(4,3,2))
A1
L1 <- list(v1, F1, M1, A1, D3)
L1
L2 <- list(x = 1:4, y = c("A", "B"))
L2
list(v1, F1, M1, A1, D3)
L1
L2 <- list(x = 1:4, y = c("A", "B"))
L2
L2$x
L2$y
